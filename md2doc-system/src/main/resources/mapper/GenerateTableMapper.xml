<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc.system.mapper.GenerateTableMapper">

    <resultMap type="GenerateTable" id="GenerateTableResult">
        <result property="genTableId"    column="gen_table_id"    />
        <result property="tableName"    column="table_name"    />
        <result property="tableComment"    column="table_comment"    />
        <result property="className" column="class_name" />
        <result property="packageName" column="package_name" />
        <result property="functionAuthor" column="function_author" />
        <result property="moduleName" column="module_name" />
        <result property="functionName" column="function_name" />
        <result property="businessName" column="business_name" />
        <result property="userId" column="user_id" />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="status"    column="status"    />
        <result property="ver"    column="ver"    />
    </resultMap>

    <resultMap type="GenerateTable" id="GenerateTableAndColumnResult">
        <result property="genTableId"    column="gen_table_id"    />
        <result property="tableName"    column="table_name"    />
        <result property="tableComment"    column="table_comment"    />
        <result property="className" column="class_name" />
        <result property="packageName" column="package_name" />
        <result property="functionAuthor" column="function_author" />
        <result property="moduleName" column="module_name" />
        <result property="functionName" column="function_name" />
        <result property="businessName" column="business_name" />
        <result property="userId" column="user_id" />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="status"    column="status"    />
        <result property="ver"    column="ver"    />
        <collection property="tableColumns" javaType="java.util.List" ofType="GenerateTableColumn">
            <result property="genTableColumnId" column="gen_table_column_id" />
            <result property="genTableId" column="gen_table_id" />
            <result property="columnName" column="column_name" />
            <result property="columnComment" column="column_comment" />
            <result property="columnType" column="column_type" />
            <result property="javaType" column="java_type" />
            <result property="javaField" column="java_field" />
            <result property="isPk" column="is_pk" />
            <result property="isRequire" column="is_require" />
            <result property="sort" column="sort" />
            <result property="isIncrement" column="is_increment" />
            <result property="createTime" column="create_time" />
            <result property="updateTime" column="update_time" />
            <result property="status" column="status" />
            <result property="ver" column="ver" />
        </collection>
    </resultMap>

    <sql id="selectGenerateTableVo">
        select gen_table_id, table_name, table_comment,  class_name, package_name, function_author, module_name,
               function_name, business_name, user_id, create_time, update_time, status, ver from tb_gen_table
    </sql>

    <select id="selectDbTableList" resultMap="GenerateTableResult">
        select table_name, table_comment, create_time, update_time from information_schema.tables
        where table_schema = (select database())
          AND table_name NOT LIKE 'tb_qrtz_%' AND table_name NOT LIKE 'tb_gen_%'
          AND table_name NOT IN (select table_name from tb_gen_table)
        order by create_time desc
    </select>

    <select id="selectGenerateTableList" resultMap="GenerateTableResult">
        <include refid="selectGenerateTableVo" />
    </select>

    <select id="selectDbTableListByNames" resultMap="GenerateTableResult">
        select table_name, table_comment, create_time, update_time from information_schema.tables
        where table_name NOT LIKE 'tb_qrtz_%' and table_name NOT LIKE 'tb_gen_%' and table_schema = (select database())
        and table_name in
        <foreach collection="list" item="name" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>
    <select id="selectGenerateTableByGenTableId" resultMap="GenerateTableAndColumnResult">
        select * from tb_gen_table gt
        left join tb_gen_table_column gtc on gt.gen_table_id = gtc.gen_table_id
        where gt.gen_table_id = #{genTableId}
    </select>

    <select id="selectGenerateTableByGenTableIds" resultMap="GenerateTableAndColumnResult">
        select * from tb_gen_table gt
                          left join tb_gen_table_column gtc on gt.gen_table_id = gtc.gen_table_id
        <where>
            gt.gen_table_id in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </where>
    </select>


</mapper>
